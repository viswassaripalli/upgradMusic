{"ast":null,"code":"import _slicedToArray from \"/Users/viswassaripalli/Desktop/music/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/viswassaripalli/Desktop/music/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const _useState = useState(\"india\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        country = _useState2[0],\n        setCountry = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tracks = _useState4[0],\n        setTracks = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        state = _useState6[0],\n        setState = _useState6[1];\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    fetchapi();\n  });\n\n  const fetchapi = () => {\n    var api = \"http://ws.audioscrobbler.com/2.0/?method=geo.gettoptracks&country=\" + country + \"&api_key=1860cfefc2bccd102f8437ff38667f0f&format=json\";\n    fetch(api).then(function (response) {\n      return response.json();\n    }).then(function (myJson) {\n      // console.log(myJson);\n      setState(1);\n      setTracks(myJson.tracks);\n    });\n  };\n\n  const searchChangeHandler = event => {\n    // console.log(event.target.value);\n    setCountry(event.target.value);\n    setState(0);\n  };\n\n  const frame = () => {\n    if (state === 0) {\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading....\"));\n    } else {\n      React.createElement(Chart, {\n        tracks: tracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"top tracks in \", country, \" \"), React.createElement(\"select\", {\n    className: \"dropdown\",\n    onChange: searchChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"india\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"india\"), React.createElement(\"option\", {\n    value: \"france\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"france\"), React.createElement(\"option\", {\n    value: \"canada\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"canada\"), React.createElement(\"option\", {\n    value: \"china\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"china\"), React.createElement(\"option\", {\n    value: \"greece\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"greece\"), React.createElement(\"option\", {\n    value: \"japan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"japan\")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"frame\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/viswassaripalli/Desktop/music/src/App.js"],"names":["React","useState","useEffect","App","country","setCountry","tracks","setTracks","state","setState","fetchapi","api","fetch","then","response","json","myJson","searchChangeHandler","event","target","value","frame"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACiBF,QAAQ,CAAC,OAAD,CADzB;AAAA;AAAA,QACNG,OADM;AAAA,QACGC,UADH;;AAAA,qBAEeJ,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAENK,MAFM;AAAA,QAEEC,SAFF;;AAAA,qBAGaN,QAAQ,CAAC,CAAD,CAHrB;AAAA;AAAA,QAGNO,KAHM;AAAA,QAGCC,QAHD;;AAIbP,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,QAAQ;AACT,GAHQ,CAAT;;AAIA,QAAMA,QAAQ,GAAG,MAAM;AACrB,QAAIC,GAAG,GACL,uEACAP,OADA,GAEA,uDAHF;AAKAQ,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAASC,QAAT,EAAmB;AACvB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQ,UAASG,MAAT,EAAiB;AACrB;AACAP,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,MAAAA,SAAS,CAACS,MAAM,CAACV,MAAR,CAAT;AACD,KARH;AASD,GAfD;;AAgBA,QAAMW,mBAAmB,GAAGC,KAAK,IAAI;AACnC;AACAb,IAAAA,UAAU,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACAX,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAJD;;AAKA,QAAMY,KAAK,GAAG,MAAM;AAClB,QAAIb,KAAK,KAAK,CAAd,EAAiB;AACf,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF;AAKD,KAND,MAMO;AACL,0BAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AACF,GAVD;;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqCF,OAArC,MADF,EAEE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,QAAQ,EAAEa,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAME;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD;;AAED,eAAed,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [country, setCountry] = useState(\"india\");\n  const [tracks, setTracks] = useState([]);\n  const [state, setState] = useState(0);\n  useEffect(() => {\n    // Update the document title using the browser API\n    fetchapi();\n  });\n  const fetchapi = () => {\n    var api =\n      \"http://ws.audioscrobbler.com/2.0/?method=geo.gettoptracks&country=\" +\n      country +\n      \"&api_key=1860cfefc2bccd102f8437ff38667f0f&format=json\";\n\n    fetch(api)\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function(myJson) {\n        // console.log(myJson);\n        setState(1);\n        setTracks(myJson.tracks);\n      });\n  };\n  const searchChangeHandler = event => {\n    // console.log(event.target.value);\n    setCountry(event.target.value);\n    setState(0);\n  };\n  const frame = () => {\n    if (state === 0) {\n      return (\n        <div className=\"card\">\n          <h1>Loading....</h1>\n        </div>\n      );\n    } else {\n      <Chart tracks={tracks} />;\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">top tracks in {country} </h1>\n      <select className=\"dropdown\" onChange={searchChangeHandler}>\n        <option value=\"india\">india</option>\n        <option value=\"france\">france</option>\n        <option value=\"canada\">canada</option>\n        <option value=\"china\">china</option>\n        <option value=\"greece\">greece</option>\n        <option value=\"japan\">japan</option>\n      </select>\n      <button>Search</button>\n      <frame />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}